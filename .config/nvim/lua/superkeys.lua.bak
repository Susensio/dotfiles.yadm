local M = {}

---@class (exact) SuperkeyExtension
---@field name? string
---@field key string
---@field callback fun(): nil
---@field priority number
---@field when boolean | (fun(): boolean)
---@field halt boolean

---@type SuperkeyExtension[]
local extensions = {}


---Keep extensions sorted by priority
---@param ext SuperkeyExtension
function M.add(ext)
  for i, item in ipairs(extensions) do
    if item.priority < ext.priority then
      table.insert(extensions, i, ext)
      return
    end
  end
  table.insert(extensions, ext)
end

---@param key string
local function normal_key(key)
  vim.api.nvim_feedkeys(vim.api.nvim_replace_termcodes(key, true, false, true), "n", false)
end

---@param key string
function M.press(key)
  for _, ext in pairs(vim.tbl_filter(function(e) return e.key==key end, extensions)) do
    if ext.when == true or ext.when() == true then
      ext.callback()
      if ext.halt then
        return
      end
    end
  end

  normal_key(key)
end

function M.debug()
  vim.print(extensions)
end


return M
