setw -g mode-keys vi
unbind -aq -T copy-mode

HL_TIMEOUT=0.1

# Disable bc copy-pipe can conflict with this
set -s set-clipboard off

# Enter and exit copy mode
unbind [
unbind ]
unbind -T copy-mode-vi q
unbind -T copy-mode-vi C-j
bind v copy-mode
bind -T copy-mode-vi Escape {
  if -F "#{selection_present}" {
    send -X clear-selection
    if -F "#{scroll_position}" {} { send -X cancel }
  } {
    send -X cancel
  }
}

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle


# KEYBOARD CLIPBOARD
# Default copy-pipe to main `clipboard`
set -s copy-command 'clipboard copy --selection clipboard'
# But use primary latter for mouse support

# Copy
# bind -T copy-mode-vi y send -X copy-pipe   # and clear selection
bind -T copy-mode-vi y {
  if -F "#{selection_active}" \
    { send-keys -X copy-pipe-and-cancel } \
    { switch-client -T yank }
}

# TODO: avoid all this repetition...
bind -T yank y {
  send-keys -X select-line;
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel;
}
bind -T yank w {
  send-keys -X begin-selection;
  send-keys -X next-word;
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel;
}
bind -T yank W {
  send-keys -X begin-selection;
  send-keys -X next-space;
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel;
}
bind-key -T yank F {
  send-keys -X begin-selection;
  command-prompt -1 -p "(jump backward)" { send-keys -X jump-backward "%%" };
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel;
}
bind-key -T yank T {
  send-keys -X begin-selection;
  command-prompt -1 -p "(jump to backward)" { send-keys -X jump-to-backward "%%" };
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel;
}
bind-key -T yank f {
  send-keys -X begin-selection;
  command-prompt -1 -p "(jump forward)" { send-keys -X jump-forward "%%" };
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel;
}
bind-key -T yank t {
  send-keys -X begin-selection;
  command-prompt -1 -p "(jump to forward)" { send-keys -X jump-to-forward "%%" };
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel;
}

bind -T yank i {
  switch-client -T yank-inner
}
bind -T yank a {
  switch-client -T yank-around
}
bind -T yank-inner w {
  send-keys -X previous-word;
  send-keys -X begin-selection;
  send-keys -X next-word-end;
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel;
}
bind -T yank-inner W {
  send-keys -X previous-space;
  send-keys -X begin-selection;
  send-keys -X next-space-end;
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel;
}
bind -T yank-inner p {
  send-keys -X previous-prompt -o;
  send-keys -X begin-selection;
  send-keys -X next-prompt;
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel;
}
bind -T yank-around p {
  send-keys -X previous-prompt;
  send-keys -X begin-selection;
  send-keys -X next-prompt;
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel;
}

bind -T copy-mode-vi i {
  if -F "#{selection_active}" {
    switch-client -T visual-inner;
  }
}
bind -T copy-mode-vi a {
  if -F "#{selection_active}" {
    switch-client -T visual-around;
  }
}
bind -T visual-inner w {
  send-keys -X previous-word;
  send-keys -X begin-selection;
  send-keys -X next-word-end;
}
bind -T visual-inner W {
  send-keys -X previous-space;
  send-keys -X begin-selection;
  send-keys -X next-space-end;
}
bind -T visual-inner p {
  send-keys -X previous-prompt -o;
  send-keys -X begin-selection;
  send-keys -X next-prompt;
}
bind -T visual-around p {
  send-keys -X previous-prompt;
  send-keys -X begin-selection;
  send-keys -X next-prompt;
}

bind -T copy-mode-vi Y {
  send-keys -X begin-selection;
  send-keys -X end-of-line;
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel;
}
# How to do this for every vim motion?

bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel

# Paste
bind p run "tmux set-buffer -b clipboard_selection \"$(clipboard paste --selection clipboard)\"; \
            tmux paste-buffer -b clipboard_selection; \
            tmux delete-buffer -b clipboard_selection"

# Block selection
bind-key -T copy-mode-vi 'C-v' {
  send -X begin-selection;
  send -X rectangle-toggle;
}

# MOUSE PRIMARY CLIPBOARD
# Proper left click support to move cursor
bind -T copy-mode-vi MouseDown1Pane {
  select-pane;
  send -X clear-selection;
}

# Copy
bind -T copy-mode-vi MouseDragEnd1Pane { send -X copy-pipe-no-clear 'clipboard copy --selection primary' }
bind -T copy-mode-vi DoubleClick1Pane {
  select-pane;
  send-keys -X select-word;
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel 'clipboard copy --selection primary';
}
bind -T copy-mode-vi TripleClick1Pane {
  select-pane;
  send-keys -X select-line;
  run-shell -d $HL_TIMEOUT;
  send-keys -X copy-pipe-and-cancel 'clipboard copy --selection primary';
}

# Paste
# Mouse paste from primary
bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(clipboard paste --selection primary)\";\
                            tmux paste-buffer -b primary_selection;\
                            tmux delete-buffer -b primary_selection"


# OTHER tweaks for copy mode
# Incremental search (changed direction because muscle memory and less keystrokes)
bind -T copy-mode-vi ? command-prompt -i -p "(search down)" { send -X search-forward-incremental "%%%" }
bind -T copy-mode-vi / command-prompt -i -p "(search up)" { send -X search-backward-incremental "%%%" }
# Shortcut
bind / copy-mode \; send /

# Navigate between prompts
bind -T copy-mode-vi "[" send -X previous-prompt -o
bind -T copy-mode-vi "]" send -X next-prompt
# Shortcut
bind "[" { copy-mode ; send -X previous-prompt -o }
bind "]" { copy-mode ; send -X next-prompt }

bind C-u copy-mode \; send -X search-backward "(https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*"

# Mouse scroll up = Default + start scrolling
bind -n WheelUpPane {
  if -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" {
    send-keys -M
  } {
    copy-mode -e;
    send -X -N 5 scroll-up;
  }
}

# Mouse scroll when selection, remove selection
bind -T copy-mode-vi WheelUpPane {
  select-pane;
  send -X clear-selection;
  send -X -N 5 scroll-up;
}

bind -T copy-mode-vi WheelDownPane {
  select-pane;
  send -X clear-selection;
  send -X -N 5 scroll-down;
}

# bind C-r choose-buffer
