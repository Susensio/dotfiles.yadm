# Mouse mode
set -g mouse on

# Split windows using | and -
unbind '"'
unbind %
bind '\' split-window -h -c "#{pane_current_path}"
bind '-' split-window -v -c "#{pane_current_path}"
# .. to full width
bind '|' split-window -hf -c "#{pane_current_path}"
bind '_' split-window -vf -c "#{pane_current_path}"
# enter to new split
bind Enter run "$XDG_CONFIG_HOME/tmux/scripts/new-split"


# equalize panes
unbind E
bind = select-layout -E
# change between layouts
bind M-` next-layout \; display-message "Next layout"

# PANE
# Disable arrow keys to move between panes
unbind Up
unbind Down
unbind Left
unbind Right


# Pane navigation with plugin
set -g @plugin 'aserowy/tmux.nvim'

# navigation
set -g @tmux-nvim-navigation true
set -g @tmux-nvim-navigation-cycle false
set -g @tmux-nvim-navigation-keybinding-left 'M-h'
set -g @tmux-nvim-navigation-keybinding-down 'M-j'
set -g @tmux-nvim-navigation-keybinding-up 'M-k'
set -g @tmux-nvim-navigation-keybinding-right 'M-l'

# resize
set -g @tmux-nvim-resize true
set -g @tmux-nvim-resize-step-x 4
set -g @tmux-nvim-resize-step-y 2
set -g @tmux-nvim-resize-keybinding-left 'M-C-h'
set -g @tmux-nvim-resize-keybinding-down 'M-C-j'
set -g @tmux-nvim-resize-keybinding-up 'M-C-k'
set -g @tmux-nvim-resize-keybinding-right 'M-C-l'

# swap
# TODO: implement in plugin...

# %hidden IS_VIM="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# %hidden CYCLE=true
# if "$CYCLE" {
#     bind -n M-h if "$IS_VIM" { send-keys M-h } { if -F '#{pane_at_left}' {} { select-pane -L } }
#     bind -n M-j if "$IS_VIM" { send-keys M-j } { if -F '#{pane_at_bottom}' {} { select-pane -D } }
#     bind -n M-k if "$IS_VIM" { send-keys M-k } { if -F '#{pane_at_top}' {} { select-pane -U } }
#     bind -n M-l if "$IS_VIM" { send-keys M-l } { if -F '#{pane_at_right}' {} { select-pane -R } }
#     bind -T copy-mode-vi M-h if -F '#{pane_at_left}' {} { select-pane -L }
#     bind -T copy-mode-vi M-j if -F '#{pane_at_bottom}' {} { select-pane -D }
#     bind -T copy-mode-vi M-k if -F '#{pane_at_top}' {} { select-pane -U }
#     bind -T copy-mode-vi M-l if -F '#{pane_at_right}' {} { select-pane -R }
# } {
#     bind -n M-h if "$IS_VIM" { send-keys M-h } { select-pane -L }
#     bind -n M-j if "$IS_VIM" { send-keys M-j } { select-pane -D }
#     bind -n M-k if "$IS_VIM" { send-keys M-k } { select-pane -U }
#     bind -n M-l if "$IS_VIM" { send-keys M-l } { select-pane -R }
#     bind -T copy-mode-vi M-h select-pane -L
#     bind -T copy-mode-vi M-j select-pane -D
#     bind -T copy-mode-vi M-k select-pane -U
#     bind -T copy-mode-vi M-l select-pane -R
# }
#
# # Resize panes
# bind -n M-C-h if "$IS_VIM" { send-keys M-C-h } { resize-pane -L 4 }
# bind -n M-C-l if "$IS_VIM" { send-keys M-C-l } { resize-pane -R 4 }
# bind -n M-C-k if "$IS_VIM" { send-keys M-C-k } { resize-pane -U 2 }
# bind -n M-C-j if "$IS_VIM" { send-keys M-C-j } { resize-pane -D 2 }

# TODO: think about
# Swap panes
unbind C-o  # swap clockwise
unbind M-o  # swap anticlockwise
unbind '{'  # move left
unbind '}'  # move right
# do not use L because last session
# bind -r H swap-pane -s "{left-of}"
# bind -r J swap-pane -s "{down-of}"
# bind -r K swap-pane -s "{up-of}"
# bind -r L swap-pane -s "{right-of}"

# Window navigation
bind -n -r 'M-[' if -F "#{!=:#{window_index},1}" { previous-window; }
bind -n -r 'M-]' if -F "#{!=:#{window_index},#{last_window_index}}" { next-window; }
# Swap windows with shift
bind -n -r 'M-{' if -F "#{!=:#{window_index},1}" { swap-window -d -t -1; }
bind -n -r 'M-}' if -F "#{!=:#{window_index},#{last_window_index}}" { swap-window -d -t +1; }

bind -n M-0 select-window -t :=0
bind -n M-1 select-window -t :=1
bind -n M-2 select-window -t :=2
bind -n M-3 select-window -t :=3
bind -n M-4 select-window -t :=4
bind -n M-5 select-window -t :=5
bind -n M-6 select-window -t :=6
bind -n M-7 select-window -t :=7
bind -n M-8 select-window -t :=8
bind -n M-9 select-window -t :=9

# Session navigation
unbind (
unbind )
bind f run "$XDG_CONFIG_HOME/tmux/scripts/sessionizer"
bind -n M-Pageup run "$XDG_CONFIG_HOME/tmux/scripts/switch-session -p"
bind -n M-Pagedown run "$XDG_CONFIG_HOME/tmux/scripts/switch-session -n"
bind L run "$XDG_CONFIG_HOME/tmux/scripts/switch-session -l"

# Filter out hidden sessions (scratchpads)
# bind s choose-tree -sZ -f '#{m:[!_]*,#{session_name}}'
bind s choose-tree -sZ -f '#{!=:#{@hidden},true}'
bind w choose-tree -wZ -f '#{!=:#{@hidden},true}'

# Toggle scratchpad
bind -n M-t run-shell "$XDG_CONFIG_HOME/tmux/scripts/scratch-toggle --session"
bind -n M-T run-shell "$XDG_CONFIG_HOME/tmux/scripts/scratch-toggle --global"

# Chrome like navigation
unbind n
unbind p
unbind c
unbind &
unbind q
unbind t    # disable clock shortcut
unbind ","  # rename

unbind \$
bind n command-prompt -I "#W" { rename-window "%%" }
bind N command-prompt -I "#S" { rename-session "%%" }

# # TODO: window, tab...
# bind -T rename w command-prompt -I "#W" { rename-window "%%" }
# bind -T rename s command-prompt -I "#S" { rename-session "%%" }

bind t new-window # same directory
bind F new-session -c "$HOME"
bind q confirm-before -p "kill-window #S? (y/n)" kill-window
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Display pane numbers
bind "`" display-panes

# List keys
bind ? list-keys
# bind / queries keys by default

# Popup man
# bind m command-prompt -p 'man page:' { display-popup -E -h 90% -w 90% man '%%' }
bind m run "$HOME/bin/sd/fzf/man"
