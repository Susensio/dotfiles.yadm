#!/bin/bash
# Clipboard, platform agnostic

MODE="pipe"
SELECTION="clipboard"

get_system() {
  if uname -r | grep -q -i wsl; then
    echo "wsl"
  elif [[ $XDG_SESSION_TYPE == "wayland" ]]; then
    echo "wayland"
  elif [[ $XDG_SESSION_TYPE == "x11" ]]; then
    echo "x11"
  else
    echo "Unsupported system" >&2
    exit 1
  fi
}

# Copying function
copy_to_clipboard() {
  local data
  IFS='' read -d '' -r data

  case "$(get_system)" in
    wayland)
      if [ "$SELECTION" == "clipboard" ]; then
        printf '%s' "$data" | wl-copy
      else
        printf '%s' "$data" | wl-copy --primary
      fi
      ;;
    x11)
      printf '%s' "$data" | xclip -selection "$SELECTION"
      ;;
    wsl)
      printf '%s' "$data" | /mnt/c/Windows/System32/clip.exe
      ;;
  esac
}

# Pasting function
paste_from_clipboard() {
  case "$(get_system)" in
    wayland)
      if [ "$SELECTION" == "clipboard" ]; then
        wl-paste --no-newline
      else
        wl-paste --primary --no-newline
      fi
      ;;
    x11)
      xclip -selection "$SELECTION" -o
      ;;
    wsl)
      powershell.exe -noprofile -c '[Console]::Out.Write($(Get-Clipboard -Raw).tostring().replace("`r", ""))'
      ;;
  esac
}

# Parse command line arguments
while [[ "$#" -gt 0 ]]; do
  case $1 in
    copy|paste)
      MODE=$1
      shift
      ;;
    -s|--selection)
      shift
      case "$1" in
        "clipboard"|"primary")
          SELECTION="$1"
          ;;
        *)
          echo "Invalid selection value: $1. Allowed values are 'clipboard' or 'primary'."
          exit 1
          ;;
      esac
      shift
      ;;
    *)
      echo "Unknown argument: $1"
      exit 1
      ;;
  esac
done

case $MODE in
  copy)
    copy_to_clipboard
    ;;
  paste)
    paste_from_clipboard
    ;;
  pipe)

    if [[ -p /dev/stdin ]]; then
      copy_to_clipboard
    else
      paste_from_clipboard
    fi
    ;;
  *)
    echo "ERROR: No command provided" >&2
    exit 1
esac
